{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( '@stdlib/assert-is-date-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar dayOfYear = require( '@stdlib/time-day-of-year' );\nvar quarterOfYear = require( '@stdlib/time-quarter-of-year' );\nvar isLeapYear = require( '@stdlib/assert-is-leap-year' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\n// Quarter days:\nvar NON_LEAP_YEAR = [ 0, 90, 181, 273 ];\nvar LEAP_YEAR = [ 0, 91, 182, 274 ];\n\n\n// MAIN //\n\n/**\n* Returns the day of the quarter.\n*\n* @param {(string|integer|Date)} [month] - month (or `Date`)\n* @param {integer} [day] - day\n* @param {integer} [year] - year\n* @throws {TypeError} first argument must be either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @throws {TypeError} second argument must be an integer\n* @throws {RangeError} second argument must be greater than `0` and less than or equal to the maximum number of days in a month\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} day of the quarter\n*\n* @example\n* var day = dayOfQuarter();\n* // returns <number>\n*\n* day = dayOfQuarter( new Date() );\n* // returns <number>\n*\n* day = dayOfQuarter( 12, 31, 2017 );\n* // returns 92\n*/\nfunction dayOfQuarter( month, day, year ) {\n\tvar date;\n\tvar yr;\n\tvar q;\n\tvar d;\n\tif ( arguments.length === 0 ) {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\tdate = new Date();\n\t\tq = quarterOfYear( date );\n\t\td = dayOfYear( date );\n\t\tyr = date.getFullYear();\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\tdate = month;\n\t\t\tq = quarterOfYear( date );\n\t\t\td = dayOfYear( date );\n\t\t\tyr = date.getFullYear();\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. If only providing a single argument, must provide a Date object. Value: `%s`.', month ) );\n\t\t}\n\t} else {\n\t\tif ( !isString( month ) && !isInteger( month ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a string or integer. Value: `%s`.', month ) );\n\t\t}\n\t\tif ( !isInteger( day ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', day ) );\n\t\t}\n\t\tif ( !isInteger( year ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', year ) );\n\t\t}\n\t\tq = quarterOfYear( month );\n\t\td = dayOfYear( month, day, year );\n\t\tyr = year;\n\t}\n\tif ( isLeapYear( yr ) ) {\n\t\treturn d - LEAP_YEAR[ q-1 ];\n\t}\n\treturn d - NON_LEAP_YEAR[ q-1 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = dayOfQuarter;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the day of the quarter.\n*\n* @module @stdlib/time-day-of-quarter\n*\n* @example\n* var dayOfQuarter = require( '@stdlib/time-day-of-quarter' );\n*\n* var day = dayOfQuarter();\n* // returns <number>\n*\n* day = dayOfQuarter( new Date() );\n* // returns <number>\n*\n* day = dayOfQuarter( 12, 31, 2017 );\n* // returns 92\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,+BAAgC,EACxDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAY,QAAS,0BAA2B,EAChDC,EAAgB,QAAS,8BAA+B,EACxDC,EAAa,QAAS,6BAA8B,EACpDC,EAAS,QAAS,uBAAwB,EAM1CC,EAAgB,CAAE,EAAG,GAAI,IAAK,GAAI,EAClCC,EAAY,CAAE,EAAG,GAAI,IAAK,GAAI,EA6BlC,SAASC,EAAcC,EAAOC,EAAKC,EAAO,CACzC,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAK,UAAU,SAAW,EAEzBH,EAAO,IAAI,KACXE,EAAIX,EAAeS,CAAK,EACxBG,EAAIb,EAAWU,CAAK,EACpBC,EAAKD,EAAK,YAAY,UACX,UAAU,SAAW,EAChC,GAAKb,EAAcU,CAAM,EACxBG,EAAOH,EACPK,EAAIX,EAAeS,CAAK,EACxBG,EAAIb,EAAWU,CAAK,EACpBC,EAAKD,EAAK,YAAY,MAEtB,OAAM,IAAI,UAAWP,EAAQ,kGAAmGI,CAAM,CAAE,MAEnI,CACN,GAAK,CAACT,EAAUS,CAAM,GAAK,CAACR,EAAWQ,CAAM,EAC5C,MAAM,IAAI,UAAWJ,EAAQ,oFAAqFI,CAAM,CAAE,EAE3H,GAAK,CAACR,EAAWS,CAAI,EACpB,MAAM,IAAI,UAAWL,EAAQ,qEAAsEK,CAAI,CAAE,EAE1G,GAAK,CAACT,EAAWU,CAAK,EACrB,MAAM,IAAI,UAAWN,EAAQ,oEAAqEM,CAAK,CAAE,EAE1GG,EAAIX,EAAeM,CAAM,EACzBM,EAAIb,EAAWO,EAAOC,EAAKC,CAAK,EAChCE,EAAKF,CACN,CACA,OAAKP,EAAYS,CAAG,EACZE,EAAIR,EAAWO,EAAE,CAAE,EAEpBC,EAAIT,EAAeQ,EAAE,CAAE,CAC/B,CAKAhB,EAAO,QAAUU,ICnEjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isDateObject", "isString", "isInteger", "dayOfYear", "quarterOfYear", "isLeapYear", "format", "NON_LEAP_YEAR", "LEAP_YEAR", "dayOfQuarter", "month", "day", "year", "date", "yr", "q", "d", "main"]
}
